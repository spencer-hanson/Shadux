#!/bin/bash

##############################################################################
# IMPORTANT NOTE:                                                            #
#     Changing the prefixes will require you to make additional preparations #
#     not covered by LFScript, to build the selected packages properly.      #
##############################################################################

# Prepare the Xorg build environment as described in the BLFS chapter
# 'Introduction to Xorg'.
XORG_PREFIX="/usr"
XORG_CONFIG="--prefix=${XORG_PREFIX} \
             --sysconfdir=/etc \
             --mandir=${XORG_PREFIX}/share/man \
             --localstatedir=/var"
export XORG_PREFIX XORG_CONFIG

# Prepare the KDE build environment as described in the BLFS chapter
# 'KDE Pre-installation Configuration'.
export KDE_PREFIX="/usr"

# Prepare the Gnome build environment as described in the BLFS chapter
# 'Pre-installation Configuration' in 'GNOME Core Packages'.
export GNOME_PREFIX="/usr"
export MATE_PREFIX="/usr"
export MATE_RELEASE="1.1"

# (*) Disable the installation of GConf schemas during 'make install', because
#     the GConf post-installation script will handle this.
export GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL="1"
export MATECONF_DISABLE_MAKEFILE_SCHEMA_INSTALL="1"

##################################################################
includeBootscript() { # ALLOWS EASY BLFS-BOOTSCRIPT INSTALLATION #
##################################################################

pushd /sources/builddir
tar xf blfs-bootscripts-*.tar.bz2
cd blfs-bootscripts-*
make DESTDIR=${FAKEROOT} install-${1}
popd

#####################################################################
}; convertToMate() { # CONVERTS SOURCE CODE MADE FOR GNOME, TO MATE #
#####################################################################

# Define what keywords need to be replaced
local REPLACE=(
    # --- GConf -> MateConf --- #
    "\bGCONF\b" "MATECONF"
    "\bGCONF_"  "MATECONF_"
    "_GCONF\b"  "_MATECONF"
    "_GCONF_"   "_MATECONF_"

    "\bGCONFTOOL\b" "MATECONFTOOL"
    "_GCONFTOOL\b"  "_MATECONFTOOL"

    "\bgconf\b" "mateconf"
    "\bgconf_"  "mateconf_"
    "_gconf\b"  "_mateconf"
    "_gconf_"   "_mateconf_"

    "\blibgconf\b" "libmateconf"
    "\blibgconf_"  "libmateconf_"
    "_libgconf_"   "_libmateconf_"

    "\bgconfentryfile\b"  "mateconfentryfile"
    "\bgconfschemafile\b" "mateconfschemafile"

    "\bgconftool-2\b" "mateconftool-2"

    "\bGConf\b"               "MateConf"
    "\bGConfValue\b"          "MateConfValue"
    "\bGConfEntry\b"          "MateConfEntry"
    "\bGConfClient\b"         "MateConfClient"
    "\bGConfValueType\b"      "MateConfValueType"
    "\bGConfUnsetFlags\b"     "MateConfUnsetFlags"
    "\bGConfClientClass\b"    "MateConfClientClass"
    "\bGConfClientPrivate\b"  "MateConfClientPrivate"
    "\bGConfEnumStringPair\b" "MateConfEnumStringPair"

    # --- GnomeKeyring -> MateKeyring --- #
    "\bGnomeKeyring" "MateKeyring"

    # --- Gnome -> Mate --- #
    "\bgnome\b" "mate"
    "\bgnome_"  "mate_"
    "_gnome\b"  "_mate"
    "_gnome_"  "_mate_"

    "\bGNOME\b" "MATE"
    "\bGNOME_"  "MATE_"
    "_GNOME\b"  "_MATE"
    "_GNOME_"   "_MATE_"
)

# Update file contents
for (( i=0; i < ${#REPLACE[@]}; )); do
    local SEARCH="${REPLACE[i++]}"
    local DESTROY="${REPLACE[i++]}"

    echo "Changing '${SEARCH}' to '${DESTROY}'..."

    for file in $(grep -rl "${SEARCH}" *); do
        sed "s/${SEARCH}/${DESTROY}/g" -i ${file}
    done
done

#################
} # END OF FILE #
#################

